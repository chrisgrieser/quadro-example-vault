/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

"use strict";var Pe=Object.defineProperty;var bt=Object.getOwnPropertyDescriptor;var kt=Object.getOwnPropertyNames;var Pt=Object.prototype.hasOwnProperty;var St=(t,e)=>{for(var o in e)Pe(t,o,{get:e[o],enumerable:!0})},It=(t,e,o,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of kt(e))!Pt.call(t,i)&&i!==o&&Pe(t,i,{get:()=>e[i],enumerable:!(n=bt(e,i))||n.enumerable});return t};var Dt=t=>It(Pe({},"__esModule",{value:!0}),t);var Rt={};St(Rt,{default:()=>ke});module.exports=Dt(Rt);var Tt=require("obsidian");var N=require("obsidian");var A=require("obsidian"),re={state:{source:!1,mode:"source"}},q=/\[\[(.+?)([|#].*?)?\]\]/;function h(t,e){let{app:o,settings:n}=t;return e||(e=o.workspace.getActiveFile()),typeof e=="string"&&(e=o.vault.getFileByPath(e)),!e||!(e instanceof A.TFile)||e.extension!=="md"?"Not Markdown":e.name==="Template.md"?"Template":e.path.includes(t.backupDirName)?"Backup":e.path.startsWith(n.coding.folder+"/")?"Code File":e.path.startsWith(n.extraction.folder+"/")?"Extraction File":"Data File"}async function se(t,e,o){let{app:n,settings:i}=t,r=i.analysis.folder;n.vault.getFolderByPath(r)||n.vault.createFolder(r);let a=(0,A.normalizePath)(r+`/${e}.md`),c=n.vault.getFileByPath(a);c?await n.vault.modify(c,o.join(`
`)):c=await n.vault.create(a,o.join(`
`)),await n.workspace.getLeaf().openFile(c,re),k(n)?.setCursor({line:0,ch:0}),n.commands.executeCommandById("file-explorer:reveal-active-file")}function k(t){let e=t.workspace.activeEditor?.editor;return e||new A.Notice("No active editor."),e}function j(t){if(t.getLine(t.getCursor().line).trim()===""&&!t.somethingSelected())return new A.Notice(`Current line is empty. 

Move cursor to a paragraph and try again.`,4e3),!0;let o=t.getCursor("head").line!==t.getCursor("anchor").line,n=t.listSelections().length>1;return o||n?(new A.Notice(`Paragraph ambiguous since multiple lines are selected.

Unselect, move your cursor to the paragraph you want to affect, and use the command again.`,5e3),!0):!1}function z(t){let e=t.getSelection().includes("==");return e&&new A.Notice(`Selection contains highlights.
Overlapping highlights are not supported.`,4e3),e}function ae(t){let e=t.workspace.getActiveFile();if(!e)return!1;let o=e.basename.match(/[|^#]/)?.[0];if(!o)return!1;let n=`The current file contains an invalid character: ${o}

Rename the file and try again.`;return new A.Notice(n,0),!0}function ce(t){t.metadataTypeManager.setType("extraction-date","datetime"),t.metadataTypeManager.setType("merge-date","datetime"),t.metadataTypeManager.setType("extraction-source","multitext"),t.metadataTypeManager.setType("code description","text")}var Ve=[{id:"show-progress",name:"Show data analysis progress file",func:Ot,icon:"flag-triangle-right"},{id:"mark-datafile-as-read",name:"Mark current Data File as read",func:$t,icon:"file-check"}];function Ye(t){let e=t.settings.analysis.folder;return(0,N.normalizePath)(e+"/"+"progress.json")}function Ot(t){t.app.showInFolder(Ye(t))}function $t(t){let e=t.app,o=e.workspace.getActiveFile();if(!(h(t,o)==="Data File"&&o instanceof N.TFile)){new N.Notice("Current file is not a Data File.",4e3);return}if(e.metadataCache.getFileCache(o)?.frontmatter?.read){new N.Notice("Data File already marked as read.",4e3);return}e.fileManager.processFrontMatter(o,r=>{r.read=!0}),x(t,"Data File","read"),new N.Notice("Marked current Data File as read.")}async function x(t,e,o){let{app:n}=t,i=(0,N.moment)().format("YYYY-MM-DD"),r=Ye(t),a=await n.vault.adapter.exists(r)?JSON.parse(await n.vault.adapter.read(r)):{};a[i]||(a[i]={}),a[i][e]||(a[i][e]={}),a[i][e][o]||(a[i][e][o]=0),a[i][e][o]++,n.vault.adapter.write(r,JSON.stringify(a,null,2))}var le={"last used first":(t,e)=>e.stat.mtime-t.stat.mtime,"oldest used first":(t,e)=>t.stat.mtime-e.stat.mtime,"frequently used first":(t,e)=>e.stat.size-t.stat.size,"rarely used first":(t,e)=>t.stat.size-e.stat.size,random:()=>Math.random()-.5,alphabetical:(t,e)=>t.basename.localeCompare(e.basename)},Ke={",":"Comma (,)",";":"Semicolon (;)","	":"Tab"},qe={"right-split":"to the right","down-split":"to the bottom",tab:"in new tab"},L={coding:{folder:"Codes",displayCount:!0,sortFunc:"last used first"},extraction:{folder:"Extractions",displayCount:!0,openingMode:"tab",csvSeparator:",",ignorePropertyOnMerge:[],displayProperty:[]},analysis:{folder:"Analysis"},suppressSuggestionInFields:[],propertiesKeysWidthPercent:35};function Z(t,e){return e.path.slice(t.settings.coding.folder.length+1,-3)}function ee(t,e){let o=t.app.metadataCache.resolvedLinks[e.path]||{},n=0;for(let[i,r]of Object.entries(o))h(t,i)==="Data File"&&(n+=r);return n}function de(t,e,o){let n=t.app;return(o.match(new RegExp(q,"g"))||[]).reduce((s,a)=>{let[c,d]=a.match(q)||[];if(!d)return s;let l=n.metadataCache.getFirstLinkpathDest(d,e.path);return l&&h(t,l)==="Code File"&&s.push({tFile:l,wikilink:a}),s},[])}function pe(t){let e=t.app.vault.getMarkdownFiles().filter(n=>h(t,n)==="Code File"),o=le[t.settings.coding.sortFunc];return e.sort(o),e}function _(t,e){let o=Z(t,e);if(!t.settings.coding.displayCount)return o;let i=ee(t,e);return`${o} (${i}x)`}var Q=require("obsidian");var ue=require("obsidian"),D=class extends ue.FuzzySuggestModal{hotkeyInstructions=[{command:"\u2191 \u2193",purpose:"Navigate"},{command:"\u21B9 ",purpose:"Down"},{command:"shift \u21B9 ",purpose:"Up"},{command:"\u23CE",purpose:"Select"},{command:"esc",purpose:"Dismiss"}];plugin;settings;constructor(e){super(e.app),this.plugin=e,this.settings=e.settings,this.modalEl.addClass(e.cssclass),this.setInstructions(this.hotkeyInstructions),this.scope.register([],"Tab",()=>{document.dispatchEvent(new KeyboardEvent("keydown",{key:"ArrowDown"}))}),this.scope.register(["Shift"],"Tab",()=>{document.dispatchEvent(new KeyboardEvent("keydown",{key:"ArrowUp"}))})}},H=class extends ue.Modal{plugin;confirmationButton;constructor(e){super(e.app),this.plugin=e,this.modalEl.addClass(e.cssclass)}onClose(){this.contentEl.empty()}};async function te(t,e){let{app:o,settings:n}=t,i=n.extraction.openingMode,r=o.workspace.getLeaf();if(i==="tab"){let s=r.parent;await o.workspace.createLeafInParent(s,s.children.length).openFile(e,re)}else{let s=i==="right-split"?"right":"bottom",a=i==="right-split"?"vertical":"horizontal",c=o.workspace.getAdjacentLeafInDirection(r,s)||o.workspace.createLeafBySplit(r,a,!1);await c.openFile(e,re),c.parent.setDimension(2)}}function me(t,e){t.vault.setConfig("propertiesInDocument","visible"),setTimeout(()=>{let o=t.workspace.getActiveViewOfType(Q.MarkdownView)?.metadataEditor.rendered[0];if(!o)return;o[e==="key"?"focusKey":"focusValue"]()},350)}var U=class extends D{extractionTypes;callback;constructor(e,o){super(e),this.extractionTypes=oe(e),this.callback=o,this.setPlaceholder("Select extraction type")}getItems(){return this.extractionTypes.sort((e,o)=>{let n=M(this.plugin,e).length;return M(this.plugin,o).length-n})}getItemText(e){if(!this.plugin.settings.extraction.displayCount)return e.name;let n=M(this.plugin,e).length;return`${e.name} (${n}x)`}onChooseItem(e){this.callback(e)}};function fe(t,e){let{app:o,settings:n}=t,i=o.metadataCache.getFileCache(e)?.frontmatter,r=n.extraction.displayProperty;if(!i||r.length===0)return e.basename;let s=i?.["extraction-source"]?.length||0,a=s>1?`${s}x`:"",c=r.find(u=>{let y=i[u];return Array.isArray(y)?y.length>0:y||y===0});if(!c)return e.basename;let d=i[c];Array.isArray(d)&&(d=d.join(", "));let l=d?`${c}: ${d}`:"";return[e.basename,a,l].filter(Boolean).join("  \u2B29  ")}function he(t,e){let o=t.vault.getFileByPath(`${e.path}/Template.md`);if(!o){new Q.Notice(`ERROR: Could not find "Template.md" for Extraction Type "${e.name}".`,0);return}let n=t.metadataCache.getFileCache(o)?.frontmatter;if(!n){new Q.Notice(`ERROR: Properties of "Template.md" for Extraction Type "${e.name}" are invalid.`,0);return}return n}function oe(t){let{app:e,settings:o}=t,n=e.vault.getFolderByPath(o.extraction.folder);if(!n){new Q.Notice("ERROR: Could not find Extraction Folder.",0);return}let i=n.children.filter(r=>r instanceof Q.TFolder&&r.children.find(s=>s.name==="Template.md"));if(i.length===0){let r=["ERROR: Could not find any valid Extraction Types.",'Check that the extraction folder has subfolders, and that the subfolder has a "Template.md" file.','You can also create a new extraction type with the command "Create new extraction type" or by pressing the button with the dashed box in the left sidebar.'].join(`

`);new Q.Notice(r,0);return}return i}function M(t,e){return e.children.filter(n=>h(t,n)==="Extraction File")}function ge(t){let{app:e,statusbar:o,settings:n}=t,i=[],r=h(t),s=e.workspace.getActiveFile();if(!s||!["Data File","Code File","Extraction File"].includes(r)){o.setText("");return}if(r==="Code File"){let p=ee(t,s);i.push(`Code ${p}x assigned`)}else if(r==="Extraction File"){let l=s.parent;if(l){let p=M(t,l).length;i.push(`${p}x extracted`)}}else if(r==="Data File"){let l=e.metadataCache.resolvedLinks[s.path]||{},p=0,u=0;for(let[y,f]of Object.entries(l))y.startsWith(n.coding.folder+"/")&&(p+=f),y.startsWith(n.extraction.folder+"/")&&u++;p>0&&i.push(`${p} Codes`),u>0&&i.push(`${u} Extractions`)}let a=e.metadataCache.unresolvedLinks[s.path]||{},c=0;for(let[l,p]of Object.entries(a))c+=p;c>0&&i.push(`${c} invalid links`);let d=i.map(l=>l.startsWith("1 ")?l.slice(0,-1):l).join(", ");o.setText(d)}var R=require("obsidian");async function ze(t){let e=["*This file updates automatically, any manual changes to it will be lost.*","","```"+t.codeblockLabels.codeOverview,"```",""];await se(t,"Code Overview",e)}function _e(t,e){let{app:o,settings:n}=t,i=[...e.children];i.sort((s,a)=>s instanceof R.TFolder&&a instanceof R.TFile?-1:s instanceof R.TFile&&a instanceof R.TFolder?1:s.name.localeCompare(a.name));let r="";for(let s of i)if(s instanceof R.TFolder){let a=s;if(!a.children.some(l=>l instanceof R.TFile&&l.extension==="md"))continue;let d=_e(t,a);r+=`<li>\u{1F4C1} ${a.name} ${d}</li>`}else if(s instanceof R.TFile){let a=s,c=a.path===n.coding.folder+"/Template.md",d=a.extension!=="md";if(c||d)continue;let l=o.metadataCache.getFileCache(a)?.frontmatter?.["code description"],p=l?": "+l:"",u=`<a href="${a.path}" class="internal-link">${a.basename}</a>`,y=ee(t,a);r+=`<li>\u{1F4C4} ${u} (${y}x)${p}</li>`}return`<ul>${r}</ul>`}function Ue(t){let{app:e,settings:o}=t,n=e.vault.getFolderByPath(o.coding.folder);return n?_e(t,n):`\u26A0\uFE0F Code folder "${o.coding.folder}" not found.`}var Oe=require("obsidian");var Ge=require("obsidian"),Se=/\^[\w-]+$/;function Mt(t){let[e]=t.match(Se)||[];if(e){let n=t.slice(0,-e.length).trim();return{blockId:e,lineWithoutId:n}}return{blockId:"^id-"+(0,Ge.moment)().format("YYMMDD-HHmmss"),lineWithoutId:t.trim()}}function G(t){let e=t.getCursor(),o=t.getLine(e.line),n=t.getSelection();if(n){let s=n.replace(/^( ?)(.+?)( ?)$/g,"$1==$2==$3");t.replaceSelection(s),o=t.getLine(e.line)}let{blockId:i,lineWithoutId:r}=Mt(o);return{blockId:i,lineWithoutId:r}}function X(t,e,o,n,i){let r=t.editorComponent.view.file;if(!r)return;let s=t.editorComponent.app;s.vault.setConfig("useMarkdownLinks",!1);let a=s.fileManager.generateMarkdownLink(e,r.path,"",o),c=`${n} ${a} ${i}`,d=t.getCursor();t.setLine(d.line,c),t.setCursor(d)}var S=require("obsidian");var ye=require("obsidian"),V=class extends ye.AbstractInputSuggest{textInputEl;plugin;foldersInVault;constructor(e,o){super(e.app,o),this.textInputEl=o,this.plugin=e,this.foldersInVault=e.app.vault.getAllLoadedFiles().filter(n=>n instanceof ye.TFolder)}getSuggestions(e){return this.foldersInVault.filter(o=>o.path.includes(e))}renderSuggestion(e,o){o.createEl("span",{text:e.path})}selectSuggestion(e){this.textInputEl.value=e.path,this.textInputEl.trigger("input"),this.close()}};function Xe(t,e){return e.path.slice(t.settings.coding.folder.length+1)+"/"}var Fe=class extends V{getSuggestions(e){if(!e.includes("/"))return[];let o=this.plugin.settings;return this.foldersInVault.filter(i=>{let r=i.path.includes(e),s=i.path.startsWith(o.coding.folder+"/"),a=!i.path.includes(this.plugin.backupDirName);return r&&s&&a})}renderSuggestion(e,o){let n=Xe(this.plugin,e);o.createEl("span",{text:n})}selectSuggestion(e){this.textInputEl.value=Xe(this.plugin,e),this.textInputEl.trigger("input"),this.close()}};var Ie=class extends H{fullCode="";codeDesc="";onSubmit;constructor(e,o){super(e),this.onSubmit=o}onOpen(){let{contentEl:e}=this;e.addClass(this.plugin.cssclass);let o=i=>i!==""&&!i.startsWith("/")&&!i.endsWith("/"),n=()=>{this.close(),this.onSubmit(this.fullCode,this.codeDesc)};e.createEl("h4",{text:"New code creation"}),e.createEl("small",{text:'If there is a file "Template.md" at the root of the Codes Folder, the new Code File will be populated with its frontmatter.'}),e.createEl("br",{}),e.createEl("br",{}),new S.Setting(e).setName("Name of the code").setDesc('Use a slash ("/") in the name to create the Code File in a subfolder (group). Example: "groupname/codename".').addText(i=>{new Fe(this.plugin,i.inputEl),i.onChange(r=>{this.fullCode=r.trim(),this.confirmationButton?.setDisabled(!o(this.fullCode))}).inputEl.addClass("quadro-wide-input"),i.inputEl.addEventListener("keydown",r=>{r.key==="Enter"&&o(this.fullCode)&&(r.preventDefault(),n())})}),new S.Setting(e).setName("Code description").setDesc('Will be added as metadata with the key "code description".').addText(i=>{i.onChange(r=>{this.codeDesc=r.trim()}).inputEl.addClass("quadro-wide-input"),i.inputEl.addEventListener("keydown",r=>{r.key==="Enter"&&o(this.fullCode)&&(r.preventDefault(),n())})}),new S.Setting(e).addButton(i=>{this.confirmationButton=i.setButtonText("Create").setCta().setDisabled(!0).onClick(n)}).addButton(i=>i.setButtonText("Cancel").onClick(()=>this.close()))}},De=class extends H{input="";onSubmit;constructor(e,o){super(e),this.onSubmit=o}onOpen(){let{contentEl:e}=this;e.addClass(this.plugin.cssclass),e.createEl("h4",{text:"Bulk-create new codes"}),e.createEl("p",{text:"Every line will result in a new code file."}),e.createEl("p",{text:'Use a slash ("/") in the name to create the Code File in a subfolder (group).'}),e.createEl("p",{text:'If there is a file "Template.md" at the root of the Codes Folder, the new Code Files will be populated with its frontmatter.'}),new S.Setting(e).addTextArea(o=>{o.onChange(n=>{this.input=n.trim(),this.confirmationButton?.setDisabled(this.input==="")}).inputEl.addClass("quadro-large-textarea")}).infoEl.remove(),new S.Setting(e).addButton(o=>{this.confirmationButton=o.setButtonText("Create").setCta().setDisabled(!0).onClick(()=>{this.close(),this.onSubmit(this.input)})}).addButton(o=>o.setButtonText("Cancel").onClick(()=>this.close()))}};async function Je(t,e,o){let{app:n,settings:i}=t;e=e.replace(/\.md$/,"").replace(/[:#^?!"*<>|[\]\\]/g,"-").replace(/^\.|\/\./g,"").replace(/^\/+|\/+$/g,"");let r=(0,S.normalizePath)(`${i.coding.folder}/${e}.md`);if(n.vault.getFileByPath(r))return new S.Notice(`Code "${e}" already exists, Code File not created.`,0),!1;let a=e.split("/"),c=a.pop(),d=a.length>0?"/"+a.join("/"):"",l=i.coding.folder+d;n.vault.getFolderByPath(l)||await n.vault.createFolder(l);let u=`code description: "${o.replaceAll('"',"'")}"`,y=n.vault.getFileByPath(i.coding.folder+"/Template.md"),f=[];if(y){let P=/^code description: (.*)$/m,I=await n.vault.read(y),{exists:m,frontmatter:g}=(0,S.getFrontMatterInfo)(I);m&&(g=g.match(P)?g.replace(P,u):u+`
`+g,f.push(...g.trim().split(`
`)))}else f.push(u);let C=["---",...f,"---","",""],w=await n.vault.create(`${l}/${c}.md`,C.join(`
`));return w?(new S.Notice(`Created new code file: "${e}"`,3500),x(t,"Code File","new"),w):(new S.Notice("Failed to create new code file.",0),!1)}function Ze(t,e){new Ie(t,async(o,n)=>{let i=await Je(t,o,n);i&&e(i)}).open()}function et(t){new De(t,async e=>{let o=0,n=[];for(let r of e.split(`
`))await Je(t,r,"")?o++:n.push(r);let i=`${o} file(s) created`;n.length>0&&(i+=`
Could not create: `+n.join(", ")),new S.Notice(i,n.length>0?0:3e3)}).open()}var $e=class extends D{editor;codesInPara;dataFile;constructor(e,o,n,i){super(e),this.editor=o,this.codesInPara=n,this.dataFile=i,this.setPlaceholder("Select code to assign"),this.setInstructions([...this.hotkeyInstructions,{command:"shift \u23CE",purpose:"Create new code"}]),this.scope.register(["Shift"],"Enter",r=>{r.isComposing||(r.preventDefault(),this.close(),this.onChooseItem("new-code-file"))})}getItems(){return[...pe(this.plugin).filter(n=>!this.codesInPara.find(i=>i.path===n.path)),"new-code-file"]}getItemText(e){return e==="new-code-file"?"\u2B51 Create new code":_(this.plugin,e)}onChooseItem(e){e==="new-code-file"?Ze(this.plugin,o=>this.assignCode(o,this.dataFile)):this.assignCode(e,this.dataFile)}async assignCode(e,o){let n=this.editor,i=Z(this.plugin,e),{blockId:r,lineWithoutId:s}=G(n);X(n,e,i,s,r);let a=`![[${o.path.slice(0,-3)}#${r}]]
`;await this.app.vault.append(e,a),x(this.plugin,"Code File","assign")}};function tt(t){let{app:e}=t,o=k(e);if(!o||j(o))return;if(h(t)!=="Data File"){new Oe.Notice("You must be in a Data File to assign a code.",4e3);return}if(z(o)||ae(e))return;let n=o.editorComponent.view.file;if(!n){new Oe.Notice("No file open.",4e3);return}let i=o.getLine(o.getCursor().line),r=de(t,n,i).map(s=>s.tFile);new $e(t,o,r,n).open()}var Me=require("obsidian");async function ot(t){let e=t.app,o=k(e);if(!o)return;if(h(t)!=="Code File"){new Me.Notice("Must be in a Code File to delete the code everywhere.",4e3);return}let n=o.editorComponent.view.file;if(!n){new Me.Notice("No file open.",4e3);return}await e.vault.trash(n,!0)}var we=require("obsidian");var O=require("obsidian");function At(t){t.workspace.activeEditor?.editor?.editorComponent?.view?.currentMode?.cleanupLivePreview?.()}async function Ce(t,e,o,n,i){let{app:r,settings:s}=t;n=(0,O.normalizePath)(n+"/"+t.backupDirName),r.vault.getFolderByPath(n)||await r.vault.createFolder(n);let a=(0,O.moment)().format("YY-MM-DD_HH-mm-ss");await r.vault.copy(e,`${n}/${e.basename} ${a}.md`),await r.vault.copy(o,`${n}/${o.basename} ${a}.md`);let c=[...s.extraction.ignorePropertyOnMerge,"extraction-date","merge-date"],d=r.metadataCache.getFileCache(o)?.frontmatter||{},l={};await r.fileManager.processFrontMatter(e,m=>{for(let g in d){let F=m[g],E=d[g],$=!F&&F!==0&&F!==!1,T=!E&&E!==0&&E!==!1;if(!(c.includes(g)||F===E||T)){if($){m[g]=E;continue}if(Array.isArray(F)&&Array.isArray(E)){m[g]=[...new Set([...F,...E])];continue}m[g]=F,l[g]=E}}m["merge-date"]=(0,O.moment)().format("YYYY-MM-DDTHH:mm")});let p=await r.vault.cachedRead(o);await r.vault.process(e,m=>{let g=m.slice((0,O.getFrontMatterInfo)(m).contentStart),F=p.slice((0,O.getFrontMatterInfo)(p).contentStart),E="";Object.keys(l).length>0&&(E=`
`+["#### Properties that could be not be automatically merged",...(0,O.stringifyYaml)(l).trim().split(`
`).map(Et=>"- "+Et),"","---"].join(`
`)+`

`);let T=(g+`
`+F).replaceAll(`**Paragraph extracted from:**
`,"").replace(/\n{2,}/g,`
`);return m.slice(0,(0,O.getFrontMatterInfo)(m).contentStart)+E+T}),At(r),k(r)?.setCursor({line:0,ch:0});let u=[];for(let[m,g]of Object.entries(r.metadataCache.resolvedLinks))Object.keys(g).includes(o.path)&&u.push(m);let y=[...new Set(u)],f=0,C=0;for(let m of y){let g=r.vault.getFileByPath(m);g&&(await r.vault.process(g,F=>{let E=r.metadataCache.getFileCache(g)?.links||[],$=[];for(let T of E){if(T.link!==o.basename&&T.link!==o.path)continue;let{start:b,end:J}=T.position;$.push([b.offset,J.offset])}$.sort((T,b)=>b[0]-T[0]);for(let[T,b]of $){let J=i==="Code File"?"|"+Z(t,e):"",He=`[[${e.basename}${J}]]`;F=F.slice(0,T)+He+F.slice(b),C++}return F}),f++)}r.vault.delete(o);let w=C===1?"":"s",P=f===1?"":"s",I=[`"${o.basename}" merged into "${e.basename}".`,`${C} reference${w} in ${f} file${P} updated.`,`A backup of the original files has been saved in the subfolder "${t.backupDirName}."`].join(`

`);new O.Notice(I,1e4)}var Ae=class extends D{mergeKeepFile;constructor(e,o){super(e),this.setPlaceholder(`Select Code File to merge into "${o.basename}":`),this.mergeKeepFile=o}getItems(){let e=pe(this.plugin).filter(o=>o.path!==this.mergeKeepFile.path);return e.length===0&&(new we.Notice("No other codes have been created yet.",4e3),this.close()),e}getItemText(e){return _(this.plugin,e)}async onChooseItem(e){let{plugin:o,mergeKeepFile:n}=this,i=o.settings.coding.folder;await Ce(o,n,e,i,"Code File"),x(o,"Code File","merge")}};function nt(t){let e=k(t.app);if(!e)return;if(h(t)!=="Code File"){new we.Notice("You must be in a Code File for this.",3500);return}let o=e.editorComponent.view.file;if(!o){new we.Notice("No file open.",4e3);return}new Ae(t,o).open()}var it=require("obsidian");function rt(t){h(t)==="Code File"?(t.app.commands.executeCommandById("workspace:edit-file-title"),x(t,"Code File","rename")):new it.Notice("You must be in a Code File.",4e3)}var Y=require("obsidian");var Ne=class extends D{codesInParagraph;dataFile;editor;constructor(e,o,n,i){super(e),this.codesInParagraph=i,this.dataFile=n,this.editor=o,this.plugin=e,this.setPlaceholder("Select code to remove from paragraph")}getItems(){return this.codesInParagraph}getItemText(e){return _(this.plugin,e.tFile)}onChooseItem(e){st(this.plugin,this.editor,this.dataFile,e)}};async function st(t,e,o,n){let i=t.app,r=e.getCursor().line,s=e.getLine(r),a=s.replace(n.wikilink,"");e.setLine(r,a);let[c]=s.match(Se)||[];if(!c){new Y.Notice(`No ID found in current line.
Reference in Code File thus not deleted.`,0);return}i.vault.process(n.tFile,d=>{let l=d.split(`
`),p=l.findIndex(u=>{if(!u.includes(c))return!1;let y=u.match(new RegExp(q,"g"))||[];for(let f of y){let[C,w]=f.match(q)||[];if(!w)continue;if(i.metadataCache.getFirstLinkpathDest(w,n.tFile.path)?.path===o.path)return!0}return!1});if(p<0){let u=`"Code File "${n.tFile.basename}" contains no reference to Data File "${o.basename}" with the ID "${c}". Reference in Code File is thus not deleted.`;return new Y.Notice(u,0),d}return l.splice(p,1),d=l.join(`
`),new Y.Notice(`Assignment of code "${n.tFile.basename}" removed.`,3500),x(t,"Code File","unassign"),d})}function at(t){let e=t.app,o=k(e);if(!o||j(o))return;if(h(t)!=="Data File"){new Y.Notice("You must be in a Data File to unassign a code.",4e3);return}let n=o.editorComponent.view.file;if(!n){new Y.Notice("No file open.",4e3);return}let i=o.getLine(o.getCursor().line),r=de(t,n,i);r.length===0?new Y.Notice("Line does not contain any codes to remove.",3500):r.length===1?st(t,o,n,r[0]):new Ne(t,o,n,r).open()}var ct=[{id:"assign-code",name:"Assign code to paragraph",func:tt,hotkeyLetter:"a",icon:"plus-circle"},{id:"rename-code",name:"Rename code",func:rt,hotkeyLetter:"r",icon:"circle-slash"},{id:"unassign-code",name:"Remove code from paragraph",func:at,hotkeyLetter:"d",icon:"minus-circle"},{id:"delete-code-everywhere",name:"Delete Code File and all references to it",func:ot,icon:"x-circle"},{id:"merge-codes",name:"Merge another Code File into current Code File",func:nt,icon:"circle-dot"},{id:"bulk-create-new-code-files",name:"Bulk create new Code Files",func:et,icon:"circle-dashed"},{id:"code-overview-codeblock",name:"Show code overview",func:ze,icon:"circle-equal"}];var ne=require("obsidian");var Le=class extends D{editor;constructor(e,o){super(e),this.setPlaceholder("Add paragraph to following Extraction File:"),this.editor=o}getItems(){let{app:e,plugin:o}=this,n=e.vault.getMarkdownFiles().filter(i=>h(o,i)==="Extraction File").sort((i,r)=>r.stat.mtime-i.stat.mtime);return n.length===0&&(new ne.Notice("No extractions have been created yet.",3e3),this.close()),n}getItemText(e){return fe(this.plugin,e)}async onChooseItem(e){let{app:o,editor:n}=this,i=n.editorComponent.view.file;if(!i){new ne.Notice("No file open.",4e3);return}let{blockId:r,lineWithoutId:s}=G(n);if(n.getLine(n.getCursor().line).includes(`[[${e.basename}]]`)){new ne.Notice(`The paragraph already references "${e.basename}". Aborting.`,0);return}let c=`${i.path.slice(0,-3)}#${r}`,d=`[[${c}]]`;o.fileManager.processFrontMatter(e,l=>{let p=l["extraction-source"];l["extraction-source"]=p?[...p,d]:[d]}),await o.vault.append(e,`![[${c}]]
`),X(n,e,e.basename,s,r),x(this.plugin,"Extraction File","added paragraph")}};function lt(t){let e=k(t.app);if(!(!e||j(e)||z(e))){if(h(t)!=="Data File"){new ne.Notice("You must be in a Data File to make an extraction.",4e3);return}new Le(t,e).open()}}var K=require("obsidian");var Qe=class extends H{onSubmit;nameOfNewType="";constructor(e,o){super(e),this.onSubmit=o}onOpen(){let{contentEl:e}=this;e.createEl("h4",{text:"New Extraction Type"}),e.addClass(this.plugin.cssclass);let o=i=>i!=="",n=()=>{this.close(),this.onSubmit(this.nameOfNewType)};new K.Setting(e).setName("Name of the new type").addText(i=>{i.onChange(r=>{this.nameOfNewType=r.trim(),this.confirmationButton?.setDisabled(!o(r))}).inputEl.addClass("quadro-wide-input"),i.inputEl.addEventListener("keydown",r=>{r.key==="Enter"&&o(this.nameOfNewType)&&(r.preventDefault(),n())})}),new K.Setting(e).addButton(i=>{this.confirmationButton=i.setButtonText("Create").setCta().setDisabled(!0).onClick(n)}).addButton(i=>i.setButtonText("Cancel").onClick(()=>this.close()))}};function dt(t){let{app:e,settings:o}=t;new Qe(t,async n=>{n=n.replace(/\.md$/,"").replaceAll("/","_").replace(/[:#^?!"*<>|[\]\\]/g,"-").replace(/^\./,"");let i=(0,K.normalizePath)(o.extraction.folder+"/"+n);await e.vault.createFolder(i),new K.Notice(`Creating New Template for Extraction Type "${n}"`,6e3);let s=await e.vault.create(i+"/Template.md",`---
dimension: 
---

`);await te(t,s),e.commands.executeCommandById("file-explorer:reveal-active-file"),me(e,"key")}).open()}var ut=require("obsidian"),B=require("obsidian");var Nt="-";function pt(t,e){return t.map(n=>`"${n.replaceAll('"','""')}"`).join(e)}async function mt(t){let{app:e,settings:o}=t,n=o.extraction.csvSeparator,i=oe(t);if(!i)return;let r;for(let s of i){let a=[],c=he(e,s);if(!c){let m=`Export of Extraction Type "${s.name}" is skipped, as the Templade.md has no valid properties.`;new B.Notice(m,0);continue}let d=["File",...Object.keys(c),"extraction-date","extraction-source"],l=pt(d,n);a.push(l);let p=s.children.filter(m=>m instanceof B.TFile&&m.name!=="Template.md");for(let m of p){let g=e.metadataCache.getFileCache(m)?.frontmatter;if(!g)continue;let F=[];for(let $ of d){if($==="File"){F.push(m.basename);continue}let T=g[$]??Nt,b;Array.isArray(T)?b=T.join("; "):typeof T=="object"?b=JSON.stringify(T):b=T.toString(),$==="extraction-source"&&(b=b.replace(/\[\[|\]\]/g,"")),F.push(b)}let E=pt(F,n);a.push(E)}let u=(0,B.normalizePath)(o.analysis.folder+"/CSV Export");e.vault.getFolderByPath(u)||await e.vault.createFolder(u);let f=a.join(`
`),C=(0,ut.moment)().format("YYYY-MM-DD_HH-mm-ss"),w=(0,B.normalizePath)(`${u}/${s.name}_${C}.csv`),P=await e.vault.create(w,f),I=P?`Successfully exported "${s.name}".`:`ERROR: Export for "${s.name}" failed.`;new B.Notice(I,P?5e3:0),!r&&P&&(r=P)}new B.Notice("All CSV exports finished.",3500),r&&e.showInFolder(r.path)}var W=require("obsidian");async function ft(t,e,o){let n=t.app;ce(n);let i=o.name,r=o.path,s=e.editorComponent.view.file;if(!s){new W.Notice("No file open.",4e3);return}let a=n.vault.getFileByPath(`${r}/Template.md`);if(!a){new W.Notice(`ERROR: Could not find "Template.md" for Extraction Type "${i}".`,0);return}let c=await n.vault.cachedRead(a),{exists:d,frontmatter:l}=(0,W.getFrontMatterInfo)(c);if(!d){new W.Notice(`The file "Template.md" in the folder "${r}" does not contain valid metadata fields.

You need to add valid fields before you can make extractions.`,0),te(t,a);return}let p,u=M(t,o).length;for(;;){u++;let g=u.toString().padStart(3,"0");if(p=`${r}/${i} ${g}.md`,!n.vault.getFileByPath(p))break}let{blockId:y,lineWithoutId:f}=G(e),C=`${s.path.slice(0,-3)}#${y}`,w=(0,W.moment)().format("YYYY-MM-DDTHH:mm"),P=["---",...l.split(`
`),"extraction-date: "+w,"extraction-source:",`  - "[[${C}]]"`,"---","","**Paragraph extracted from:**",`![[${C}]]`].join(`
`),I=await n.vault.create(p,P),m=I.basename;X(e,I,m,f,y),await te(t,I),me(n,"value"),x(t,"Extraction File","new")}function ht(t){let{app:e}=t,o=k(e);if(!o||j(o))return;if(h(t)!=="Data File"){new W.Notice("You must be in a Data File to make an extraction.",4e3);return}if(z(o)||ae(e))return;let n=oe(t);n&&(n.length===1?ft(t,o,n[0]):new U(t,i=>{ft(t,o,i)}).open())}var gt=require("obsidian");function Ft(t){new U(t,async e=>{let o="Extraction Overview \u2013 "+e.name,n=["*This file updates automatically, any manual changes to it will be lost.*","","> [!INFO]","> You can use the codeblock property \"filter\" to only show specific values, Click the `</>` icon to edit the filter, for example: `filter: 'word'`, and move the cursor out of the codeblock. (Leave it empty to show all values.)","","```"+t.codeblockLabels.extractionOverview,`extraction-type: "${e.name}"`,'filter: ""',"```",""];await se(t,o,n)}).open()}function yt(t,e){let o=t.app;o.internalPlugins.plugins["global-search"].enable();let n=(0,gt.parseYaml)(e),i=n["extraction-type"],r=(n.filter||"").trim().toLowerCase(),s=t.settings.extraction.folder+"/"+i,a=n.ignore||[],c=o.vault.getFolderByPath(s);if(!c)return`\u26A0\uFE0F Extraction Type "${i}" invalid.`;let d=he(o,c);if(!d)return`\u26A0\uFE0F Invalid template or frontmatter for "${i}".`;let l=Object.keys(d),p=M(t,c),u=l.map(f=>{let C=o.metadataTypeManager.getPropertyInfo(f)?.type||"",w=o.metadataCache.getFrontmatterPropertyValuesForKey(f);if(w.length===0)return`<b>${f}</b> <small>not used yet</small><br>`;if(C.startsWith("date")||a.includes(f))return`<b>${f}</b> <small>(type "${C}")</small><br>`;let P=w.reduce((I,m)=>{if(r&&!m.toLowerCase().includes(r))return I;let F=0;for(let T of p){let b=o.metadataCache.getFileCache(T)?.frontmatter?.[f];(b===m||b?.includes(m))&&F++}if(F===0)return I;let E=m.replaceAll('"','\\"'),$=`obsidian://search?query=["${f}":"${E}"] path:"${c.path}"`;return I.push(`<li><a href='${$}'>${m}</a> (${F}x)</li>`),I},[]);return`<b>${f}</b> <small><ul>${P.join("")}</ul></small>`});return(r?`<hr><b>Filter:</b> <mark>${r}</mark><hr><br>`:"")+u.join("")}var xe=require("obsidian");var Re=class extends D{mergeKeepFile;constructor(e,o){super(e),this.setPlaceholder(`Select Extraction File to merge into "${o.basename}":`),this.mergeKeepFile=o}getItems(){let e=this.mergeKeepFile.parent,o=M(this.plugin,e).filter(n=>n.path!==this.mergeKeepFile.path).sort((n,i)=>i.stat.mtime-n.stat.mtime);return o.length===0&&(new xe.Notice("No other extractions have been created yet.",4e3),this.close()),o}getItemText(e){return fe(this.plugin,e)}async onChooseItem(e){let{plugin:o,mergeKeepFile:n}=this,i=n.parent?.path||"";await Ce(o,n,e,i,"Extraction File"),x(o,"Extraction File","merge")}};function Ct(t){let e=k(t.app);if(!e)return;if(h(t)!=="Extraction File"){new xe.Notice("You must be in an Extraction File for this.",4e3);return}let o=e.editorComponent.view.file;if(!o){new xe.Notice("No file open.",4e3);return}new Re(t,o).open()}var wt=[{id:"extract-from-paragraph",name:"Extract from paragraph",func:ht,hotkeyLetter:"e",icon:"plus-square"},{id:"extract-existing-extraction-file",name:"Add paragraph as source to existing Extraction File",func:lt,hotkeyLetter:"l",icon:"square-asterisk"},{id:"merge-extractions",name:"Merge another Extraction File into current Extraction File",func:Ct,icon:"square-dot"},{id:"create-new-extraction-type",name:"Create new Extraction Type",func:dt,icon:"box-select"},{id:"export-all-extractions-as-csv",name:"Export all extractions as .csv",func:mt,icon:"arrow-up-square"},{id:"extractiontypes-overview",name:"Show extraction type overview",func:Ft,icon:"square-equal"}];function ie(t){let e=t.settings.suppressSuggestionInFields.map(n=>`[data-property-key="${n}"]`).join(", "),o=e?`.app-container:has(.metadata-property:is(${e}) :is(.metadata-input-longtext, .multi-select-container):focus-within) ~ .suggestion-container{ display: none; }`:"";if(!t.styleElSuppressSuggestionsInFields){let n=activeDocument.createElement("style");n.addClass(t.cssclass),n.setAttribute("type","text/css"),activeDocument.head.appendChild(n),t.register(()=>n?.detach()),t.styleElSuppressSuggestionsInFields=n}t.styleElSuppressSuggestionsInFields.textContent=o,t.app.workspace.trigger("css-change")}function ve(t){let o=`body .metadata-property-key { min-width: ${t.settings.propertiesKeysWidthPercent}% }`;if(!t.styleElPropertyKeyWidth){let n=activeDocument.createElement("style");n.addClass(t.cssclass),n.setAttribute("type","text/css"),activeDocument.head.appendChild(n),t.register(()=>n?.detach()),t.styleElPropertyKeyWidth=n}t.styleElPropertyKeyWidth.textContent=o,t.app.workspace.trigger("css-change")}function Be(t){return!!(t&&typeof t=="object"&&!Array.isArray(t))}function Te(t,...e){if(e.length===0)return t;let o=e.shift();if(Be(t)&&Be(o))for(let n in o)Be(o[n])?(t[n]||Object.assign(t,{[n]:{}}),Te(t[n],o[n])):Object.assign(t,{[n]:o[n]});return Te(t,...e)}var v=require("obsidian");function We(t){return(0,v.normalizePath)(t).replace(/:/g,"-")}function je(t){return t.split(`
`).map(e=>e.trim()).filter(e=>e!=="")}var Ee=class extends v.PluginSettingTab{plugin;constructor(e){super(e.app,e),this.plugin=e}display(){let{containerEl:e}=this,o=this.plugin.settings;e.empty(),e.addClass(this.plugin.cssclass),new v.Setting(e).setName("Properties without suggestions").setDesc("List of properties, one per line, for which suggestions should be surppressed. This is useful for dimensions which are intended for unique content that is not going to be repeated in other Code Files or Extraction Files.").addTextArea(n=>n.setPlaceholder("One property per line").setValue(o.suppressSuggestionInFields.join(`
`)).onChange(async i=>{o.suppressSuggestionInFields=je(i),await this.plugin.saveSettings(),ie(this.plugin)}).inputEl.addClass("quadro-settings-textarea")),new v.Setting(e).setName("Width of property keys").setDesc("Minimum width of keys in the list of properties, in percent.").addSlider(n=>n.setLimits(20,60,5).setDynamicTooltip().setValue(o.propertiesKeysWidthPercent).onChange(async i=>{o.propertiesKeysWidthPercent=i,await this.plugin.saveSettings(),ve(this.plugin)})),new v.Setting(e).setName("Coding").setHeading(),new v.Setting(e).setName("Code folder").setDesc("Location where the Code Files are stored.").addSearch(n=>{new V(this.plugin,n.inputEl),n.setPlaceholder(L.coding.folder).setValue(o.coding.folder).onChange(async i=>{o.coding.folder=We(i)||L.coding.folder,await this.plugin.saveSettings()}).inputEl.addClass("quadro-settings-input")}),new v.Setting(e).setName("Code count").setDesc("When selecting a code to assign, show a count of how often the code has already been assigned. (Note that this is a methodological decision, as it may influence your choice of codes.)").addToggle(n=>n.setValue(o.coding.displayCount).onChange(async i=>{o.coding.displayCount=i,await this.plugin.saveSettings()})),new v.Setting(e).setName("Sort order").setDesc("When selecting a code to assign, method by which the codes are ordered. (Note that this is a methodological decision, as it may influence your choice of codes.)").addDropdown(n=>{for(let i in le)n.addOption(i,i);n.setValue(o.coding.sortFunc).onChange(async i=>{o.coding.sortFunc=i,await this.plugin.saveSettings()})}),new v.Setting(e).setName("Extraction").setHeading(),new v.Setting(e).setName("Extraction folder").setDesc("Location where the Extraction Files are stored.").addSearch(n=>{new V(this.plugin,n.inputEl),n.setPlaceholder(L.extraction.folder).setValue(o.extraction.folder).onChange(async i=>{o.extraction.folder=We(i)||L.extraction.folder,await this.plugin.saveSettings()}).inputEl.addClass("quadro-settings-input")}),new v.Setting(e).setName("Extraction count").setDesc("When selecting an extraction type, show a count of how often the type has been extracted.(Note that this is a methodological decision, as it may influence your choice of codes.)").addToggle(n=>n.setValue(o.extraction.displayCount).onChange(async i=>{o.extraction.displayCount=i,await this.plugin.saveSettings()})),new v.Setting(e).setName("Location of extraction window").setDesc("When creating a new extraction, a new split window opens. This setting determines where that window opens.").addDropdown(n=>{n.addOptions(qe).setValue(o.extraction.openingMode).onChange(async i=>{o.extraction.openingMode=i,await this.plugin.saveSettings()})}),new v.Setting(e).setName("Ignore properties on merging").setDesc("List of properties, one per line, which should not trigger manual incongruence resolvement when merging Extraction Files. The properties are still added to the frontmatter, there merging just happens automatically without considering potential conflicts. This is intended for properties where it does not matter which value is chosen, such as IDs. ").addTextArea(n=>n.setPlaceholder("One property per line").setValue(o.extraction.ignorePropertyOnMerge.join(`
`)).onChange(async i=>{o.extraction.ignorePropertyOnMerge=je(i),await this.plugin.saveSettings(),ie(this.plugin)}).inputEl.addClass("quadro-settings-textarea")),new v.Setting(e).setName("Display property when merging").setDesc("Property which should be displayed when selecting an Extraction File, for instance when merging Extraction Files. If a list of properties is specified, the first one that exists in the Extraction File is used. ").addTextArea(n=>n.setPlaceholder("One property per line, the first existing property is used.").setValue(o.extraction.displayProperty.join(`
`)).onChange(async i=>{o.extraction.displayProperty=je(i),await this.plugin.saveSettings()}).inputEl.addClass("quadro-settings-textarea")),new v.Setting(e).setName("CSV separator").setDesc("Separator used when exporting extractions as .csv files.").addDropdown(n=>{n.addOptions(Ke).setValue(o.extraction.csvSeparator).onChange(async i=>{o.extraction.csvSeparator=i,await this.plugin.saveSettings()})}),new v.Setting(e).setName("Analysis").setHeading(),new v.Setting(e).setName("Analysis folder").setDesc("Location where overviews, progress, and exports are placed.").addSearch(n=>{new V(this.plugin,n.inputEl),n.setPlaceholder(L.analysis.folder).setValue(o.analysis.folder).onChange(async i=>{o.analysis.folder=We(i)||L.analysis.folder,await this.plugin.saveSettings()}).inputEl.addClass("quadro-settings-input")})}};function xt(t,e){let o=Object.keys(e).map(n=>Lt(t,n,e[n]));return o.length===1?o[0]:function(){o.forEach(n=>n())}}function Lt(t,e,o){let n=t[e],i=t.hasOwnProperty(e),r=i?n:function(){return Object.getPrototypeOf(t)[e].apply(this,arguments)},s=o(r);return n&&Object.setPrototypeOf(s,n),Object.setPrototypeOf(a,s),t[e]=a,c;function a(...d){return s===r&&t[e]===a&&c(),s.apply(this,d)}function c(){t[e]===a&&(i?t[e]=r:delete t[e]),s!==r&&(s=r,Object.setPrototypeOf(a,n||Function))}}var be=require("obsidian");function vt(t){let e=t.app.vault;return xt(e,{trash:n=>async(i,r)=>{let s=h(t,i);if(s==="Code File"&&i instanceof be.TFile){let c=`Quadro: Intercepted deletion of "${i.name}", deleting all references to the ${s} before proceeding with deletion.`;console.info(c),await Qt(t,i),x(t,s,"delete")}else s==="Data File"&&x(t,s,"delete");await n.apply(e,[i,r])}})}async function Qt(t,e){let o=t.app,n=0,i=0,r=[];for(let[l,p]of Object.entries(o.metadataCache.resolvedLinks))Object.keys(p).includes(e.path)&&r.push(l);let s=[...new Set(r)];for(let l of s){let p=o.vault.getFileByPath(l);p&&(await o.vault.process(p,u=>{let y=o.metadataCache.getFileCache(p)?.links||[],f=[];for(let C of y){if(C.link!==e.basename&&C.link!==e.path)continue;let{start:w,end:P}=C.position;f.push([w.offset,P.offset])}f.sort((C,w)=>w[0]-C[0]);for(let[C,w]of f)u[w]===" "&&w++,u=u.slice(0,C)+u.slice(w),i++;return u}),n++)}let a=i===1?"":"s",c=n===1?"":"s",d=[`"${e.basename}" was deleted.`,`${i} reference${a} in ${n} file${c} have been removed.`].join(`

`);new be.Notice(d,8e3)}var ke=class extends Tt.Plugin{styleElSuppressSuggestionsInFields;styleElPropertyKeyWidth;cssclass=this.manifest.id;codeblockLabels={extractionOverview:"quadro-extractiontype-overview",codeOverview:"quadro-code-overview"};backupDirName="pre-merge-backups";statusbar=this.addStatusBarItem();trashWatcherUninstaller;settings=L;async onload(){console.info(this.manifest.name+" Plugin loaded.");for(let e of[...ct,...wt,...Ve]){this.addRibbonIcon(e.icon,`Quadro: ${e.name}`,()=>e.func(this)).addClasses([this.cssclass,"quadro-ribbon-button"]);let n={id:e.id,name:e.name,icon:e.icon,editorCallback:async()=>e.func(this)};e.hotkeyLetter&&(n.hotkeys=[{modifiers:["Mod","Shift"],key:e.hotkeyLetter}]),this.addCommand(n)}this.statusbar.addClass(this.cssclass),ge(this),this.registerEvent(this.app.workspace.on("file-open",()=>ge(this))),this.registerEvent(this.app.metadataCache.on("resolved",()=>ge(this))),this.trashWatcherUninstaller=vt(this),await this.loadSettings(),this.addSettingTab(new Ee(this)),ie(this),ve(this),ce(this.app),this.registerMarkdownCodeBlockProcessor(this.codeblockLabels.codeOverview,(e,o)=>{o.innerHTML=Ue(this),o.addClass(this.cssclass)}),this.registerMarkdownCodeBlockProcessor(this.codeblockLabels.extractionOverview,(e,o)=>{o.innerHTML=yt(this,e),o.addClass(this.cssclass)}),window.CodeMirror.defineMode(this.codeblockLabels.extractionOverview,e=>window.CodeMirror.getMode(e,"yaml")),this.registerMarkdownCodeBlockProcessor("quadro-extractiontypes-overview",(e,o)=>{o.innerHTML='INFO: This overview is outdated. Please delete this file and re-run "Show extraction type overview".'})}onunload(){this.trashWatcherUninstaller&&this.trashWatcherUninstaller(),window.CodeMirror.defineMode(this.codeblockLabels.extractionOverview,e=>window.CodeMirror.getMode(e,"")),console.info(this.manifest.name+" Plugin unloaded.")}async loadSettings(){this.settings=Te({},L,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};
